

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Dec 23 18:06:02 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4520 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     
    59                           	psect	idataCOMRAM
    60  007E58                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _address
    64  007E58  0103               	dw	259
    65  007E5A  0B31               	dw	2865
    66  007E5C  1032               	dw	4146
    67  007E5E  0C23               	dw	3107
    68  007E60  6004               	dw	24580
    69  007E62  C0BF               	dw	49343
    70  007E64  10C6               	dw	4294
    71  007E66  0317               	dw	791
    72  007E68  0AF8               	dw	2808
    73  007E6A  0A19               	dw	2585
    74  007E6C  102A               	dw	4138
    75  007E6E  0CCB               	dw	3275
    76  007E70  1388               	dw	5000
    77  007E72  612D               	dw	24877
    78  007E74  501E               	dw	20510
    79  007E76  42AF               	dw	17071
    80                           
    81                           ;initializer for _data
    82  007E78  C0                 	db	192
    83  007E79  F9                 	db	249
    84  007E7A  A4                 	db	164
    85  007E7B  B0                 	db	176
    86  007E7C  99                 	db	153
    87  007E7D  92                 	db	146
    88  007E7E  82                 	db	130
    89  007E7F  F8                 	db	248
    90  007E80  80                 	db	128
    91  007E81  98                 	db	152
    92  007E82  88                 	db	136
    93  007E83  83                 	db	131
    94  007E84  C6                 	db	198
    95  007E85  A1                 	db	161
    96  007E86  86                 	db	134
    97  007E87  8E                 	db	142
    98  0000                     _PORTD	set	3971
    99  0000                     _TRISD	set	3989
   100  0000                     _SSPBUF	set	4041
   101  0000                     _SSPCON1	set	4038
   102  0000                     _SSPSTAT	set	4039
   103  0000                     _RA5	set	31749
   104  0000                     _BF	set	32312
   105  0000                     _TRISC5	set	31909
   106  0000                     _TRISC4	set	31908
   107  0000                     _TRISC3	set	31907
   108  0000                     _TRISA5	set	31893
   109                           
   110                           ; #config settings
   111                           
   112                           	psect	cinit
   113  007E32                     __pcinit:
   114                           	callstack 0
   115  007E32                     start_initialization:
   116                           	callstack 0
   117  007E32                     __initialization:
   118                           	callstack 0
   119                           
   120                           ; Initialize objects allocated to COMRAM (48 bytes)
   121                           ; load TBLPTR registers with __pidataCOMRAM
   122  007E32  0E58               	movlw	low __pidataCOMRAM
   123  007E34  6EF6               	movwf	tblptrl,c
   124  007E36  0E7E               	movlw	high __pidataCOMRAM
   125  007E38  6EF7               	movwf	tblptrh,c
   126  007E3A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   127  007E3C  6EF8               	movwf	tblptru,c
   128  007E3E  EE00  F001         	lfsr	0,__pdataCOMRAM
   129  007E42  EE10 F030          	lfsr	1,48
   130  007E46                     copy_data0:
   131  007E46  0009               	tblrd		*+
   132  007E48  CFF5 FFEE          	movff	tablat,postinc0
   133  007E4C  50E5               	movf	postdec1,w,c
   134  007E4E  50E1               	movf	fsr1l,w,c
   135  007E50  E1FA               	bnz	copy_data0
   136  007E52                     end_of_initialization:
   137                           	callstack 0
   138  007E52                     __end_of__initialization:
   139                           	callstack 0
   140  007E52  0100               	movlb	0
   141  007E54  EFA1  F03F         	goto	_main	;jump to C main() function
   142                           
   143                           	psect	dataCOMRAM
   144  000001                     __pdataCOMRAM:
   145                           	callstack 0
   146  000001                     _address:
   147                           	callstack 0
   148  000001                     	ds	32
   149  000021                     _data:
   150                           	callstack 0
   151  000021                     	ds	16
   152                           
   153                           	psect	cstackCOMRAM
   154  000031                     __pcstackCOMRAM:
   155                           	callstack 0
   156  000031                     ?___wmul:
   157                           	callstack 0
   158  000031                     SPI_write@data:
   159                           	callstack 0
   160  000031                     SPI_read@dummy:
   161                           	callstack 0
   162  000031                     ___wmul@multiplier:
   163                           	callstack 0
   164                           
   165                           ; 2 bytes @ 0x0
   166  000031                     	ds	1
   167  000032                     EEPROM_status@status:
   168                           	callstack 0
   169                           
   170                           ; 1 bytes @ 0x1
   171  000032                     	ds	1
   172  000033                     EEPROM_busy@busy:
   173                           	callstack 0
   174  000033                     ___wmul@multiplicand:
   175                           	callstack 0
   176                           
   177                           ; 2 bytes @ 0x2
   178  000033                     	ds	1
   179  000034                     EEPROM_write@address:
   180                           	callstack 0
   181  000034                     EEPROM_read@address:
   182                           	callstack 0
   183                           
   184                           ; 2 bytes @ 0x3
   185  000034                     	ds	1
   186  000035                     ___wmul@product:
   187                           	callstack 0
   188                           
   189                           ; 2 bytes @ 0x4
   190  000035                     	ds	1
   191  000036                     EEPROM_write@data:
   192                           	callstack 0
   193  000036                     EEPROM_read@data:
   194                           	callstack 0
   195                           
   196                           ; 1 bytes @ 0x5
   197  000036                     	ds	1
   198  000037                     delay@nMilliseconds:
   199                           	callstack 0
   200                           
   201                           ; 2 bytes @ 0x6
   202  000037                     	ds	2
   203  000039                     delay@nCycles:
   204                           	callstack 0
   205                           
   206                           ; 4 bytes @ 0x8
   207  000039                     	ds	4
   208  00003D                     main@i_67:
   209                           	callstack 0
   210                           
   211                           ; 2 bytes @ 0xC
   212  00003D                     	ds	2
   213  00003F                     main@i:
   214                           	callstack 0
   215                           
   216                           ; 2 bytes @ 0xE
   217  00003F                     	ds	2
   218                           
   219 ;;
   220 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   221 ;;
   222 ;; *************** function _main *****************
   223 ;; Defined at:
   224 ;;		line 72 in file "spi_read_write.c"
   225 ;; Parameters:    Size  Location     Type
   226 ;;		None
   227 ;; Auto vars:     Size  Location     Type
   228 ;;  i               2   12[COMRAM] int 
   229 ;;  i               2   14[COMRAM] int 
   230 ;; Return value:  Size  Location     Type
   231 ;;                  1    wreg      void 
   232 ;; Registers used:
   233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   234 ;; Tracked objects:
   235 ;;		On entry : 0/0
   236 ;;		On exit  : 0/0
   237 ;;		Unchanged: 0/0
   238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   239 ;;      Params:         0       0       0       0       0       0       0
   240 ;;      Locals:         4       0       0       0       0       0       0
   241 ;;      Temps:          0       0       0       0       0       0       0
   242 ;;      Totals:         4       0       0       0       0       0       0
   243 ;;Total ram usage:        4 bytes
   244 ;; Hardware stack levels required when called: 4
   245 ;; This function calls:
   246 ;;		_EEPROM_read
   247 ;;		_EEPROM_write
   248 ;;		_SPI_init
   249 ;;		_delay
   250 ;; This function is called by:
   251 ;;		Startup code after reset
   252 ;; This function uses a non-reentrant model
   253 ;;
   254                           
   255                           	psect	text0
   256  007F42                     __ptext0:
   257                           	callstack 0
   258  007F42                     _main:
   259                           	callstack 27
   260  007F42                     
   261                           ;spi_read_write.c: 74: SPI_init();
   262  007F42  ECDA  F03E         	call	_SPI_init	;wreg free
   263  007F46                     
   264                           ;spi_read_write.c: 75: TRISD = 0;
   265  007F46  0E00               	movlw	0
   266  007F48  6E95               	movwf	149,c	;volatile
   267  007F4A                     
   268                           ;spi_read_write.c: 76: PORTD = data[0];
   269  007F4A  C021  FF83         	movff	_data,3971	;volatile
   270  007F4E                     
   271                           ;spi_read_write.c: 78: for( int i = 0 ; i < 16 ; i++ )
   272  007F4E  0E00               	movlw	0
   273  007F50  6E40               	movwf	(main@i+1)^0,c
   274  007F52  0E00               	movlw	0
   275  007F54  6E3F               	movwf	main@i^0,c
   276  007F56                     l928:
   277                           
   278                           ;spi_read_write.c: 79: EEPROM_write(address[i],data[i]);
   279  007F56  90D8               	bcf	status,0,c
   280  007F58  343F               	rlcf	main@i^0,w,c
   281  007F5A  6ED9               	movwf	fsr2l,c
   282  007F5C  3440               	rlcf	(main@i+1)^0,w,c
   283  007F5E  6EDA               	movwf	fsr2h,c
   284  007F60  0E01               	movlw	low _address
   285  007F62  26D9               	addwf	fsr2l,f,c
   286  007F64  0E00               	movlw	high _address
   287  007F66  22DA               	addwfc	fsr2h,f,c
   288  007F68  CFDE F034          	movff	postinc2,EEPROM_write@address
   289  007F6C  CFDD F035          	movff	postdec2,EEPROM_write@address+1
   290  007F70  0E21               	movlw	low _data
   291  007F72  243F               	addwf	main@i^0,w,c
   292  007F74  6ED9               	movwf	fsr2l,c
   293  007F76  0E00               	movlw	high _data
   294  007F78  2040               	addwfc	(main@i+1)^0,w,c
   295  007F7A  6EDA               	movwf	fsr2h,c
   296  007F7C  50DF               	movf	indf2,w,c
   297  007F7E  6E36               	movwf	EEPROM_write@data^0,c
   298  007F80  EC5F  F03F         	call	_EEPROM_write	;wreg free
   299  007F84  4A3F               	infsnz	main@i^0,f,c
   300  007F86  2A40               	incf	(main@i+1)^0,f,c
   301  007F88  BE40               	btfsc	(main@i+1)^0,7,c
   302  007F8A  EFD0  F03F         	goto	u111
   303  007F8E  5040               	movf	(main@i+1)^0,w,c
   304  007F90  E109               	bnz	u110
   305  007F92  0E10               	movlw	16
   306  007F94  5C3F               	subwf	main@i^0,w,c
   307  007F96  A0D8               	btfss	status,0,c
   308  007F98  EFD0  F03F         	goto	u111
   309  007F9C  EFD2  F03F         	goto	u110
   310  007FA0                     u111:
   311  007FA0  EFAB  F03F         	goto	l928
   312  007FA4                     u110:
   313  007FA4                     l934:
   314                           
   315                           ;spi_read_write.c: 82: {;spi_read_write.c: 83: for( int i = 0 ; i < 16 ; i++ )
   316  007FA4  0E00               	movlw	0
   317  007FA6  6E3E               	movwf	(main@i_67+1)^0,c
   318  007FA8  0E00               	movlw	0
   319  007FAA  6E3D               	movwf	main@i_67^0,c
   320  007FAC                     l940:
   321                           
   322                           ;spi_read_write.c: 84: {;spi_read_write.c: 85: PORTD = EEPROM_read(address[i]);
   323  007FAC  90D8               	bcf	status,0,c
   324  007FAE  343D               	rlcf	main@i_67^0,w,c
   325  007FB0  6ED9               	movwf	fsr2l,c
   326  007FB2  343E               	rlcf	(main@i_67+1)^0,w,c
   327  007FB4  6EDA               	movwf	fsr2h,c
   328  007FB6  0E01               	movlw	low _address
   329  007FB8  26D9               	addwf	fsr2l,f,c
   330  007FBA  0E00               	movlw	high _address
   331  007FBC  22DA               	addwfc	fsr2h,f,c
   332  007FBE  CFDE F034          	movff	postinc2,EEPROM_read@address
   333  007FC2  CFDD F035          	movff	postdec2,EEPROM_read@address+1
   334  007FC6  EC44  F03F         	call	_EEPROM_read	;wreg free
   335  007FCA  6E83               	movwf	131,c	;volatile
   336  007FCC                     
   337                           ;spi_read_write.c: 86: delay(500);
   338  007FCC  0E01               	movlw	1
   339  007FCE  6E38               	movwf	(delay@nMilliseconds+1)^0,c
   340  007FD0  0EF4               	movlw	244
   341  007FD2  6E37               	movwf	delay@nMilliseconds^0,c
   342  007FD4  EC7D  F03F         	call	_delay	;wreg free
   343  007FD8                     
   344                           ;spi_read_write.c: 87: }
   345  007FD8  4A3D               	infsnz	main@i_67^0,f,c
   346  007FDA  2A3E               	incf	(main@i_67+1)^0,f,c
   347  007FDC  BE3E               	btfsc	(main@i_67+1)^0,7,c
   348  007FDE  EFFA  F03F         	goto	u121
   349  007FE2  503E               	movf	(main@i_67+1)^0,w,c
   350  007FE4  E109               	bnz	u120
   351  007FE6  0E10               	movlw	16
   352  007FE8  5C3D               	subwf	main@i_67^0,w,c
   353  007FEA  A0D8               	btfss	status,0,c
   354  007FEC  EFFA  F03F         	goto	u121
   355  007FF0  EFFC  F03F         	goto	u120
   356  007FF4                     u121:
   357  007FF4  EFD6  F03F         	goto	l940
   358  007FF8                     u120:
   359  007FF8  EFD2  F03F         	goto	l934
   360  007FFC  EF00  F000         	goto	start
   361  008000                     __end_of_main:
   362                           	callstack 0
   363                           
   364 ;; *************** function _delay *****************
   365 ;; Defined at:
   366 ;;		line 36 in file "spi_read_write.c"
   367 ;; Parameters:    Size  Location     Type
   368 ;;  nMillisecond    2    6[COMRAM] unsigned int 
   369 ;; Auto vars:     Size  Location     Type
   370 ;;  nCycles         4    8[COMRAM] unsigned long 
   371 ;; Return value:  Size  Location     Type
   372 ;;                  1    wreg      void 
   373 ;; Registers used:
   374 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   375 ;; Tracked objects:
   376 ;;		On entry : 0/0
   377 ;;		On exit  : 0/0
   378 ;;		Unchanged: 0/0
   379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   380 ;;      Params:         2       0       0       0       0       0       0
   381 ;;      Locals:         4       0       0       0       0       0       0
   382 ;;      Temps:          0       0       0       0       0       0       0
   383 ;;      Totals:         6       0       0       0       0       0       0
   384 ;;Total ram usage:        6 bytes
   385 ;; Hardware stack levels used: 1
   386 ;; Hardware stack levels required when called: 1
   387 ;; This function calls:
   388 ;;		___wmul
   389 ;; This function is called by:
   390 ;;		_main
   391 ;; This function uses a non-reentrant model
   392 ;;
   393                           
   394                           	psect	text1
   395  007EFA                     __ptext1:
   396                           	callstack 0
   397  007EFA                     _delay:
   398                           	callstack 29
   399  007EFA                     
   400                           ;spi_read_write.c: 36: void delay(unsigned int nMilliseconds);spi_read_write.c: 37: {;sp
      +                          i_read_write.c: 39: unsigned long nCycles = nMilliseconds * 100;
   401  007EFA  C037  F031         	movff	delay@nMilliseconds,___wmul@multiplier
   402  007EFE  C038  F032         	movff	delay@nMilliseconds+1,___wmul@multiplier+1
   403  007F02  0E00               	movlw	0
   404  007F04  6E34               	movwf	(___wmul@multiplicand+1)^0,c
   405  007F06  0E64               	movlw	100
   406  007F08  6E33               	movwf	___wmul@multiplicand^0,c
   407  007F0A  EC06  F03F         	call	___wmul	;wreg free
   408  007F0E  C031  F039         	movff	?___wmul,delay@nCycles
   409  007F12  C032  F03A         	movff	?___wmul+1,delay@nCycles+1
   410  007F16  6A3B               	clrf	(delay@nCycles+2)^0,c
   411  007F18  6A3C               	clrf	(delay@nCycles+3)^0,c
   412  007F1A                     l878:
   413  007F1A  0639               	decf	delay@nCycles^0,f,c
   414  007F1C  0E00               	movlw	0
   415  007F1E  5A3A               	subwfb	(delay@nCycles+1)^0,f,c
   416  007F20  5A3B               	subwfb	(delay@nCycles+2)^0,f,c
   417  007F22  5A3C               	subwfb	(delay@nCycles+3)^0,f,c
   418  007F24  2839               	incf	delay@nCycles^0,w,c
   419  007F26  E10A               	bnz	u81
   420  007F28  283A               	incf	(delay@nCycles+1)^0,w,c
   421  007F2A  E108               	bnz	u81
   422  007F2C  283B               	incf	(delay@nCycles+2)^0,w,c
   423  007F2E  E106               	bnz	u81
   424  007F30  283C               	incf	(delay@nCycles+3)^0,w,c
   425  007F32  A4D8               	btfss	status,2,c
   426  007F34  EF9E  F03F         	goto	u81
   427  007F38  EFA0  F03F         	goto	u80
   428  007F3C                     u81:
   429  007F3C  EF8D  F03F         	goto	l878
   430  007F40                     u80:
   431  007F40  0012               	return		;funcret
   432  007F42                     __end_of_delay:
   433                           	callstack 0
   434                           
   435 ;; *************** function ___wmul *****************
   436 ;; Defined at:
   437 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
   438 ;; Parameters:    Size  Location     Type
   439 ;;  multiplier      2    0[COMRAM] unsigned int 
   440 ;;  multiplicand    2    2[COMRAM] unsigned int 
   441 ;; Auto vars:     Size  Location     Type
   442 ;;  product         2    4[COMRAM] unsigned int 
   443 ;; Return value:  Size  Location     Type
   444 ;;                  2    0[COMRAM] unsigned int 
   445 ;; Registers used:
   446 ;;		wreg, status,2, status,0, prodl, prodh
   447 ;; Tracked objects:
   448 ;;		On entry : 0/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   452 ;;      Params:         4       0       0       0       0       0       0
   453 ;;      Locals:         2       0       0       0       0       0       0
   454 ;;      Temps:          0       0       0       0       0       0       0
   455 ;;      Totals:         6       0       0       0       0       0       0
   456 ;;Total ram usage:        6 bytes
   457 ;; Hardware stack levels used: 1
   458 ;; This function calls:
   459 ;;		Nothing
   460 ;; This function is called by:
   461 ;;		_delay
   462 ;; This function uses a non-reentrant model
   463 ;;
   464                           
   465                           	psect	text2
   466  007E0C                     __ptext2:
   467                           	callstack 0
   468  007E0C                     ___wmul:
   469                           	callstack 29
   470  007E0C  5031               	movf	___wmul@multiplier^0,w,c
   471  007E0E  0233               	mulwf	___wmul@multiplicand^0,c
   472  007E10  CFF3 F035          	movff	prodl,___wmul@product
   473  007E14  CFF4 F036          	movff	prodh,___wmul@product+1
   474  007E18  5031               	movf	___wmul@multiplier^0,w,c
   475  007E1A  0234               	mulwf	(___wmul@multiplicand+1)^0,c
   476  007E1C  50F3               	movf	243,w,c
   477  007E1E  2636               	addwf	(___wmul@product+1)^0,f,c
   478  007E20  5032               	movf	(___wmul@multiplier+1)^0,w,c
   479  007E22  0233               	mulwf	___wmul@multiplicand^0,c
   480  007E24  50F3               	movf	243,w,c
   481  007E26  2636               	addwf	(___wmul@product+1)^0,f,c
   482  007E28  C035  F031         	movff	___wmul@product,?___wmul
   483  007E2C  C036  F032         	movff	___wmul@product+1,?___wmul+1
   484  007E30  0012               	return		;funcret
   485  007E32                     __end_of___wmul:
   486                           	callstack 0
   487                           
   488 ;; *************** function _SPI_init *****************
   489 ;; Defined at:
   490 ;;		line 42 in file "spi_read_write.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;		None
   493 ;; Auto vars:     Size  Location     Type
   494 ;;		None
   495 ;; Return value:  Size  Location     Type
   496 ;;                  1    wreg      void 
   497 ;; Registers used:
   498 ;;		wreg, status,2
   499 ;; Tracked objects:
   500 ;;		On entry : 0/0
   501 ;;		On exit  : 0/0
   502 ;;		Unchanged: 0/0
   503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   504 ;;      Params:         0       0       0       0       0       0       0
   505 ;;      Locals:         0       0       0       0       0       0       0
   506 ;;      Temps:          0       0       0       0       0       0       0
   507 ;;      Totals:         0       0       0       0       0       0       0
   508 ;;Total ram usage:        0 bytes
   509 ;; Hardware stack levels used: 1
   510 ;; This function calls:
   511 ;;		Nothing
   512 ;; This function is called by:
   513 ;;		_main
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517                           	psect	text3
   518  007DB4                     __ptext3:
   519                           	callstack 0
   520  007DB4                     _SPI_init:
   521                           	callstack 30
   522  007DB4                     
   523                           ;spi_read_write.c: 44: TRISA5 = 1;
   524  007DB4  8A92               	bsf	3986,5,c	;volatile
   525                           
   526                           ;spi_read_write.c: 45: TRISC3 = 0;
   527  007DB6  9694               	bcf	3988,3,c	;volatile
   528                           
   529                           ;spi_read_write.c: 46: TRISC4 = 1;
   530  007DB8  8894               	bsf	3988,4,c	;volatile
   531                           
   532                           ;spi_read_write.c: 47: TRISC5 = 0;
   533  007DBA  9A94               	bcf	3988,5,c	;volatile
   534                           
   535                           ;spi_read_write.c: 48: TRISA5 = 0;
   536  007DBC  9A92               	bcf	3986,5,c	;volatile
   537  007DBE                     
   538                           ;spi_read_write.c: 51: SSPSTAT = 0x80;
   539  007DBE  0E80               	movlw	128
   540  007DC0  6EC7               	movwf	199,c	;volatile
   541                           
   542                           ;spi_read_write.c: 52: SSPCON1 = 0x30;
   543  007DC2  0E30               	movlw	48
   544  007DC4  6EC6               	movwf	198,c	;volatile
   545  007DC6  0012               	return		;funcret
   546  007DC8                     __end_of_SPI_init:
   547                           	callstack 0
   548                           
   549 ;; *************** function _EEPROM_write *****************
   550 ;; Defined at:
   551 ;;		line 91 in file "spi_read_write.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;  address         2    3[COMRAM] int 
   554 ;;  data            1    5[COMRAM] unsigned char 
   555 ;; Auto vars:     Size  Location     Type
   556 ;;		None
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      void 
   559 ;; Registers used:
   560 ;;		wreg, status,2, status,0, cstack
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   566 ;;      Params:         3       0       0       0       0       0       0
   567 ;;      Locals:         0       0       0       0       0       0       0
   568 ;;      Temps:          0       0       0       0       0       0       0
   569 ;;      Totals:         3       0       0       0       0       0       0
   570 ;;Total ram usage:        3 bytes
   571 ;; Hardware stack levels used: 1
   572 ;; Hardware stack levels required when called: 3
   573 ;; This function calls:
   574 ;;		_EEPROM_busy
   575 ;;		_SPI_write
   576 ;; This function is called by:
   577 ;;		_main
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           	psect	text4
   582  007EBE                     __ptext4:
   583                           	callstack 0
   584  007EBE                     _EEPROM_write:
   585                           	callstack 27
   586  007EBE                     l882:
   587  007EBE  ECD4  F03E         	call	_EEPROM_busy	;wreg free
   588  007EC2  06E8               	decf	wreg,f,c
   589  007EC4  B4D8               	btfsc	status,2,c
   590  007EC6  EF67  F03F         	goto	u91
   591  007ECA  EF69  F03F         	goto	u90
   592  007ECE                     u91:
   593  007ECE  EF5F  F03F         	goto	l882
   594  007ED2                     u90:
   595  007ED2                     
   596                           ;spi_read_write.c: 96: RA5 = 0;
   597  007ED2  9A80               	bcf	3968,5,c	;volatile
   598  007ED4                     
   599                           ;spi_read_write.c: 97: SPI_write(0x06);
   600  007ED4  0E06               	movlw	6
   601  007ED6  ECE4  F03E         	call	_SPI_write
   602  007EDA                     
   603                           ;spi_read_write.c: 98: RA5 = 1;
   604  007EDA  8A80               	bsf	3968,5,c	;volatile
   605  007EDC                     
   606                           ;spi_read_write.c: 101: RA5 = 0;
   607  007EDC  9A80               	bcf	3968,5,c	;volatile
   608                           
   609                           ;spi_read_write.c: 102: SPI_write(0x02);
   610  007EDE  0E02               	movlw	2
   611  007EE0  ECE4  F03E         	call	_SPI_write
   612  007EE4                     
   613                           ;spi_read_write.c: 103: SPI_write(address>>8);
   614  007EE4  5035               	movf	(EEPROM_write@address+1)^0,w,c
   615  007EE6  ECE4  F03E         	call	_SPI_write
   616  007EEA                     
   617                           ;spi_read_write.c: 104: SPI_write(address);
   618  007EEA  5034               	movf	EEPROM_write@address^0,w,c
   619  007EEC  ECE4  F03E         	call	_SPI_write
   620  007EF0                     
   621                           ;spi_read_write.c: 105: SPI_write(data);
   622  007EF0  5036               	movf	EEPROM_write@data^0,w,c
   623  007EF2  ECE4  F03E         	call	_SPI_write
   624  007EF6                     
   625                           ;spi_read_write.c: 106: RA5 = 1;
   626  007EF6  8A80               	bsf	3968,5,c	;volatile
   627  007EF8  0012               	return		;funcret
   628  007EFA                     __end_of_EEPROM_write:
   629                           	callstack 0
   630                           
   631 ;; *************** function _EEPROM_read *****************
   632 ;; Defined at:
   633 ;;		line 109 in file "spi_read_write.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;  address         2    3[COMRAM] int 
   636 ;; Auto vars:     Size  Location     Type
   637 ;;  data            1    5[COMRAM] unsigned char 
   638 ;; Return value:  Size  Location     Type
   639 ;;                  1    wreg      unsigned char 
   640 ;; Registers used:
   641 ;;		wreg, status,2, status,0, cstack
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   647 ;;      Params:         2       0       0       0       0       0       0
   648 ;;      Locals:         1       0       0       0       0       0       0
   649 ;;      Temps:          0       0       0       0       0       0       0
   650 ;;      Totals:         3       0       0       0       0       0       0
   651 ;;Total ram usage:        3 bytes
   652 ;; Hardware stack levels used: 1
   653 ;; Hardware stack levels required when called: 3
   654 ;; This function calls:
   655 ;;		_EEPROM_busy
   656 ;;		_SPI_read
   657 ;;		_SPI_write
   658 ;; This function is called by:
   659 ;;		_main
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           	psect	text5
   664  007E88                     __ptext5:
   665                           	callstack 0
   666  007E88                     _EEPROM_read:
   667                           	callstack 27
   668  007E88                     l900:
   669  007E88  ECD4  F03E         	call	_EEPROM_busy	;wreg free
   670  007E8C  06E8               	decf	wreg,f,c
   671  007E8E  B4D8               	btfsc	status,2,c
   672  007E90  EF4C  F03F         	goto	u101
   673  007E94  EF4E  F03F         	goto	u100
   674  007E98                     u101:
   675  007E98  EF44  F03F         	goto	l900
   676  007E9C                     u100:
   677  007E9C                     
   678                           ;spi_read_write.c: 113: RA5 = 0;
   679  007E9C  9A80               	bcf	3968,5,c	;volatile
   680  007E9E                     
   681                           ;spi_read_write.c: 114: SPI_write(0x03);
   682  007E9E  0E03               	movlw	3
   683  007EA0  ECE4  F03E         	call	_SPI_write
   684  007EA4                     
   685                           ;spi_read_write.c: 115: SPI_write(address>>8);
   686  007EA4  5035               	movf	(EEPROM_read@address+1)^0,w,c
   687  007EA6  ECE4  F03E         	call	_SPI_write
   688  007EAA                     
   689                           ;spi_read_write.c: 116: SPI_write(address);
   690  007EAA  5034               	movf	EEPROM_read@address^0,w,c
   691  007EAC  ECE4  F03E         	call	_SPI_write
   692  007EB0                     
   693                           ;spi_read_write.c: 117: char data = SPI_read(0);
   694  007EB0  0E00               	movlw	0
   695  007EB2  ECFA  F03E         	call	_SPI_read
   696  007EB6  6E36               	movwf	EEPROM_read@data^0,c
   697  007EB8                     
   698                           ;spi_read_write.c: 118: RA5 = 1;
   699  007EB8  8A80               	bsf	3968,5,c	;volatile
   700  007EBA                     
   701                           ;spi_read_write.c: 120: return data;
   702  007EBA  5036               	movf	EEPROM_read@data^0,w,c
   703  007EBC  0012               	return		;funcret
   704  007EBE                     __end_of_EEPROM_read:
   705                           	callstack 0
   706                           
   707 ;; *************** function _EEPROM_busy *****************
   708 ;; Defined at:
   709 ;;		line 133 in file "spi_read_write.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;		None
   712 ;; Auto vars:     Size  Location     Type
   713 ;;  busy            1    2[COMRAM] unsigned char 
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      unsigned char 
   716 ;; Registers used:
   717 ;;		wreg, status,2, status,0, cstack
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   723 ;;      Params:         0       0       0       0       0       0       0
   724 ;;      Locals:         1       0       0       0       0       0       0
   725 ;;      Temps:          0       0       0       0       0       0       0
   726 ;;      Totals:         1       0       0       0       0       0       0
   727 ;;Total ram usage:        1 bytes
   728 ;; Hardware stack levels used: 1
   729 ;; Hardware stack levels required when called: 2
   730 ;; This function calls:
   731 ;;		_EEPROM_status
   732 ;; This function is called by:
   733 ;;		_EEPROM_write
   734 ;;		_EEPROM_read
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text6
   739  007DA8                     __ptext6:
   740                           	callstack 0
   741  007DA8                     _EEPROM_busy:
   742                           	callstack 27
   743  007DA8                     
   744                           ;spi_read_write.c: 135: char busy = EEPROM_status();
   745  007DA8  ECEF  F03E         	call	_EEPROM_status	;wreg free
   746  007DAC  6E33               	movwf	EEPROM_busy@busy^0,c
   747  007DAE                     
   748                           ;spi_read_write.c: 137: return (busy & 0x01);
   749  007DAE  5033               	movf	EEPROM_busy@busy^0,w,c
   750  007DB0  0B01               	andlw	1
   751  007DB2  0012               	return		;funcret
   752  007DB4                     __end_of_EEPROM_busy:
   753                           	callstack 0
   754                           
   755 ;; *************** function _EEPROM_status *****************
   756 ;; Defined at:
   757 ;;		line 123 in file "spi_read_write.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;		None
   760 ;; Auto vars:     Size  Location     Type
   761 ;;  status          1    1[COMRAM] unsigned char 
   762 ;; Return value:  Size  Location     Type
   763 ;;                  1    wreg      unsigned char 
   764 ;; Registers used:
   765 ;;		wreg, status,2, cstack
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   771 ;;      Params:         0       0       0       0       0       0       0
   772 ;;      Locals:         1       0       0       0       0       0       0
   773 ;;      Temps:          0       0       0       0       0       0       0
   774 ;;      Totals:         1       0       0       0       0       0       0
   775 ;;Total ram usage:        1 bytes
   776 ;; Hardware stack levels used: 1
   777 ;; Hardware stack levels required when called: 1
   778 ;; This function calls:
   779 ;;		_SPI_read
   780 ;;		_SPI_write
   781 ;; This function is called by:
   782 ;;		_EEPROM_busy
   783 ;;		_EEPROM_wrEnable
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           	psect	text7
   788  007DDE                     __ptext7:
   789                           	callstack 0
   790  007DDE                     _EEPROM_status:
   791                           	callstack 27
   792  007DDE                     
   793                           ;spi_read_write.c: 125: RA5 = 0;
   794  007DDE  9A80               	bcf	3968,5,c	;volatile
   795  007DE0                     
   796                           ;spi_read_write.c: 126: SPI_write(0x05);
   797  007DE0  0E05               	movlw	5
   798  007DE2  ECE4  F03E         	call	_SPI_write
   799  007DE6                     
   800                           ;spi_read_write.c: 127: char status = SPI_read(0) ;
   801  007DE6  0E00               	movlw	0
   802  007DE8  ECFA  F03E         	call	_SPI_read
   803  007DEC  6E32               	movwf	EEPROM_status@status^0,c
   804  007DEE                     
   805                           ;spi_read_write.c: 128: RA5 = 1;
   806  007DEE  8A80               	bsf	3968,5,c	;volatile
   807  007DF0                     
   808                           ;spi_read_write.c: 130: return status;
   809  007DF0  5032               	movf	EEPROM_status@status^0,w,c
   810  007DF2  0012               	return		;funcret
   811  007DF4                     __end_of_EEPROM_status:
   812                           	callstack 0
   813                           
   814 ;; *************** function _SPI_write *****************
   815 ;; Defined at:
   816 ;;		line 55 in file "spi_read_write.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;  data            1    wreg     unsigned char 
   819 ;; Auto vars:     Size  Location     Type
   820 ;;  data            1    0[COMRAM] unsigned char 
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   830 ;;      Params:         0       0       0       0       0       0       0
   831 ;;      Locals:         1       0       0       0       0       0       0
   832 ;;      Temps:          0       0       0       0       0       0       0
   833 ;;      Totals:         1       0       0       0       0       0       0
   834 ;;Total ram usage:        1 bytes
   835 ;; Hardware stack levels used: 1
   836 ;; This function calls:
   837 ;;		Nothing
   838 ;; This function is called by:
   839 ;;		_EEPROM_write
   840 ;;		_EEPROM_read
   841 ;;		_EEPROM_status
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text8
   846  007DC8                     __ptext8:
   847                           	callstack 0
   848  007DC8                     _SPI_write:
   849                           	callstack 29
   850                           
   851                           ;incstack = 0
   852                           ;SPI_write@data stored from wreg
   853  007DC8  6E31               	movwf	SPI_write@data^0,c
   854  007DCA                     
   855                           ;spi_read_write.c: 55: void SPI_write(char data);spi_read_write.c: 56: {;spi_read_write.
      +                          c: 57: SSPBUF = data;
   856  007DCA  C031  FFC9         	movff	SPI_write@data,4041	;volatile
   857  007DCE                     l44:
   858  007DCE  A0C7               	btfss	4039,0,c	;volatile
   859  007DD0  EFEC  F03E         	goto	u11
   860  007DD4  EFEE  F03E         	goto	u10
   861  007DD8                     u11:
   862  007DD8  EFE7  F03E         	goto	l44
   863  007DDC                     u10:
   864  007DDC  0012               	return		;funcret
   865  007DDE                     __end_of_SPI_write:
   866                           	callstack 0
   867                           
   868 ;; *************** function _SPI_read *****************
   869 ;; Defined at:
   870 ;;		line 62 in file "spi_read_write.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;  dummy           1    wreg     unsigned char 
   873 ;; Auto vars:     Size  Location     Type
   874 ;;  dummy           1    0[COMRAM] unsigned char 
   875 ;; Return value:  Size  Location     Type
   876 ;;                  1    wreg      unsigned char 
   877 ;; Registers used:
   878 ;;		wreg, status,2
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   884 ;;      Params:         0       0       0       0       0       0       0
   885 ;;      Locals:         1       0       0       0       0       0       0
   886 ;;      Temps:          0       0       0       0       0       0       0
   887 ;;      Totals:         1       0       0       0       0       0       0
   888 ;;Total ram usage:        1 bytes
   889 ;; Hardware stack levels used: 1
   890 ;; This function calls:
   891 ;;		Nothing
   892 ;; This function is called by:
   893 ;;		_EEPROM_read
   894 ;;		_EEPROM_status
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           	psect	text9
   899  007DF4                     __ptext9:
   900                           	callstack 0
   901  007DF4                     _SPI_read:
   902                           	callstack 27
   903                           
   904                           ;incstack = 0
   905                           ;SPI_read@dummy stored from wreg
   906  007DF4  6E31               	movwf	SPI_read@dummy^0,c
   907  007DF6                     
   908                           ;spi_read_write.c: 62: char SPI_read(char dummy);spi_read_write.c: 63: {;spi_read_write.
      +                          c: 64: SSPBUF = dummy;
   909  007DF6  C031  FFC9         	movff	SPI_read@dummy,4041	;volatile
   910  007DFA                     l50:
   911  007DFA  A0C7               	btfss	4039,0,c	;volatile
   912  007DFC  EF02  F03F         	goto	u21
   913  007E00  EF04  F03F         	goto	u20
   914  007E04                     u21:
   915  007E04  EFFD  F03E         	goto	l50
   916  007E08                     u20:
   917  007E08                     
   918                           ;spi_read_write.c: 67: return SSPBUF;
   919  007E08  50C9               	movf	201,w,c	;volatile
   920  007E0A  0012               	return		;funcret
   921  007E0C                     __end_of_SPI_read:
   922                           	callstack 0
   923  0000                     
   924                           	psect	rparam
   925  0000                     
   926                           	psect	idloc
   927                           
   928                           ;Config register IDLOC0 @ 0x200000
   929                           ;	unspecified, using default values
   930  200000                     	org	2097152
   931  200000  FF                 	db	255
   932                           
   933                           ;Config register IDLOC1 @ 0x200001
   934                           ;	unspecified, using default values
   935  200001                     	org	2097153
   936  200001  FF                 	db	255
   937                           
   938                           ;Config register IDLOC2 @ 0x200002
   939                           ;	unspecified, using default values
   940  200002                     	org	2097154
   941  200002  FF                 	db	255
   942                           
   943                           ;Config register IDLOC3 @ 0x200003
   944                           ;	unspecified, using default values
   945  200003                     	org	2097155
   946  200003  FF                 	db	255
   947                           
   948                           ;Config register IDLOC4 @ 0x200004
   949                           ;	unspecified, using default values
   950  200004                     	org	2097156
   951  200004  FF                 	db	255
   952                           
   953                           ;Config register IDLOC5 @ 0x200005
   954                           ;	unspecified, using default values
   955  200005                     	org	2097157
   956  200005  FF                 	db	255
   957                           
   958                           ;Config register IDLOC6 @ 0x200006
   959                           ;	unspecified, using default values
   960  200006                     	org	2097158
   961  200006  FF                 	db	255
   962                           
   963                           ;Config register IDLOC7 @ 0x200007
   964                           ;	unspecified, using default values
   965  200007                     	org	2097159
   966  200007  FF                 	db	255
   967                           
   968                           	psect	config
   969                           
   970                           ; Padding undefined space
   971  300000                     	org	3145728
   972  300000  FF                 	db	255
   973                           
   974                           ;Config register CONFIG1H @ 0x300001
   975                           ;	Oscillator Selection bits
   976                           ;	OSC = HS, HS oscillator
   977                           ;	Fail-Safe Clock Monitor Enable bit
   978                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   979                           ;	Internal/External Oscillator Switchover bit
   980                           ;	IESO = OFF, Oscillator Switchover mode disabled
   981  300001                     	org	3145729
   982  300001  02                 	db	2
   983                           
   984                           ;Config register CONFIG2L @ 0x300002
   985                           ;	Power-up Timer Enable bit
   986                           ;	PWRT = OFF, PWRT disabled
   987                           ;	Brown-out Reset Enable bits
   988                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   989                           ;	Brown Out Reset Voltage bits
   990                           ;	BORV = 3, Minimum setting
   991  300002                     	org	3145730
   992  300002  19                 	db	25
   993                           
   994                           ;Config register CONFIG2H @ 0x300003
   995                           ;	Watchdog Timer Enable bit
   996                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   997                           ;	Watchdog Timer Postscale Select bits
   998                           ;	WDTPS = 32768, 1:32768
   999  300003                     	org	3145731
  1000  300003  1E                 	db	30
  1001                           
  1002                           ; Padding undefined space
  1003  300004                     	org	3145732
  1004  300004  FF                 	db	255
  1005                           
  1006                           ;Config register CONFIG3H @ 0x300005
  1007                           ;	CCP2 MUX bit
  1008                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1009                           ;	PORTB A/D Enable bit
  1010                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1011                           ;	Low-Power Timer1 Oscillator Enable bit
  1012                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1013                           ;	MCLR Pin Enable bit
  1014                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1015  300005                     	org	3145733
  1016  300005  83                 	db	131
  1017                           
  1018                           ;Config register CONFIG4L @ 0x300006
  1019                           ;	Stack Full/Underflow Reset Enable bit
  1020                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1021                           ;	Single-Supply ICSP Enable bit
  1022                           ;	LVP = ON, Single-Supply ICSP enabled
  1023                           ;	Extended Instruction Set Enable bit
  1024                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1025                           ;	Background Debugger Enable bit
  1026                           ;	DEBUG = 0x1, unprogrammed default
  1027  300006                     	org	3145734
  1028  300006  85                 	db	133
  1029                           
  1030                           ; Padding undefined space
  1031  300007                     	org	3145735
  1032  300007  FF                 	db	255
  1033                           
  1034                           ;Config register CONFIG5L @ 0x300008
  1035                           ;	Code Protection bit
  1036                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1037                           ;	Code Protection bit
  1038                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1039                           ;	Code Protection bit
  1040                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1041                           ;	Code Protection bit
  1042                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1043  300008                     	org	3145736
  1044  300008  0F                 	db	15
  1045                           
  1046                           ;Config register CONFIG5H @ 0x300009
  1047                           ;	Boot Block Code Protection bit
  1048                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1049                           ;	Data EEPROM Code Protection bit
  1050                           ;	CPD = OFF, Data EEPROM not code-protected
  1051  300009                     	org	3145737
  1052  300009  C0                 	db	192
  1053                           
  1054                           ;Config register CONFIG6L @ 0x30000A
  1055                           ;	Write Protection bit
  1056                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1057                           ;	Write Protection bit
  1058                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1059                           ;	Write Protection bit
  1060                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1061                           ;	Write Protection bit
  1062                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1063  30000A                     	org	3145738
  1064  30000A  0F                 	db	15
  1065                           
  1066                           ;Config register CONFIG6H @ 0x30000B
  1067                           ;	Configuration Register Write Protection bit
  1068                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1069                           ;	Boot Block Write Protection bit
  1070                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1071                           ;	Data EEPROM Write Protection bit
  1072                           ;	WRTD = OFF, Data EEPROM not write-protected
  1073  30000B                     	org	3145739
  1074  30000B  E0                 	db	224
  1075                           
  1076                           ;Config register CONFIG7L @ 0x30000C
  1077                           ;	Table Read Protection bit
  1078                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1079                           ;	Table Read Protection bit
  1080                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1081                           ;	Table Read Protection bit
  1082                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1083                           ;	Table Read Protection bit
  1084                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1085  30000C                     	org	3145740
  1086  30000C  0F                 	db	15
  1087                           
  1088                           ;Config register CONFIG7H @ 0x30000D
  1089                           ;	Boot Block Table Read Protection bit
  1090                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1091  30000D                     	org	3145741
  1092  30000D  40                 	db	64
  1093                           tosu	equ	0xFFF
  1094                           tosh	equ	0xFFE
  1095                           tosl	equ	0xFFD
  1096                           stkptr	equ	0xFFC
  1097                           pclatu	equ	0xFFB
  1098                           pclath	equ	0xFFA
  1099                           pcl	equ	0xFF9
  1100                           tblptru	equ	0xFF8
  1101                           tblptrh	equ	0xFF7
  1102                           tblptrl	equ	0xFF6
  1103                           tablat	equ	0xFF5
  1104                           prodh	equ	0xFF4
  1105                           prodl	equ	0xFF3
  1106                           indf0	equ	0xFEF
  1107                           postinc0	equ	0xFEE
  1108                           postdec0	equ	0xFED
  1109                           preinc0	equ	0xFEC
  1110                           plusw0	equ	0xFEB
  1111                           fsr0h	equ	0xFEA
  1112                           fsr0l	equ	0xFE9
  1113                           wreg	equ	0xFE8
  1114                           indf1	equ	0xFE7
  1115                           postinc1	equ	0xFE6
  1116                           postdec1	equ	0xFE5
  1117                           preinc1	equ	0xFE4
  1118                           plusw1	equ	0xFE3
  1119                           fsr1h	equ	0xFE2
  1120                           fsr1l	equ	0xFE1
  1121                           bsr	equ	0xFE0
  1122                           indf2	equ	0xFDF
  1123                           postinc2	equ	0xFDE
  1124                           postdec2	equ	0xFDD
  1125                           preinc2	equ	0xFDC
  1126                           plusw2	equ	0xFDB
  1127                           fsr2h	equ	0xFDA
  1128                           fsr2l	equ	0xFD9
  1129                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        48
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     16      64
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_delay
    _delay->___wmul
    _EEPROM_write->_EEPROM_busy
    _EEPROM_read->_EEPROM_busy
    _EEPROM_busy->_EEPROM_status
    _EEPROM_status->_SPI_read
    _EEPROM_status->_SPI_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1116
                                             12 COMRAM     4     4      0
                        _EEPROM_read
                       _EEPROM_write
                           _SPI_init
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                6     4      2     432
                                              6 COMRAM     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SPI_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_write                                         3     0      3     293
                                              3 COMRAM     3     0      3
                        _EEPROM_busy
                          _SPI_write
 ---------------------------------------------------------------------------------
 (1) _EEPROM_read                                          3     1      2     233
                                              3 COMRAM     3     1      2
                        _EEPROM_busy
                           _SPI_read
                          _SPI_write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_busy                                          1     1      0      60
                                              2 COMRAM     1     1      0
                      _EEPROM_status
 ---------------------------------------------------------------------------------
 (3) _EEPROM_status                                        1     1      0      45
                                              1 COMRAM     1     1      0
                           _SPI_read
                          _SPI_write
 ---------------------------------------------------------------------------------
 (2) _SPI_write                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _SPI_read                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_read
     _EEPROM_busy
       _EEPROM_status
         _SPI_read
         _SPI_write
     _SPI_read
     _SPI_write
   _EEPROM_write
     _EEPROM_busy
     _SPI_write
   _SPI_init
   _delay
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     10      40       1       50.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      40      15        0.0%
DATA                 0      0      40       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Dec 23 18:06:02 2021

                     _BF 007E38                       l41 7DC6                       l50 7DFA  
                     l52 7E08                       l44 7DCE                       l53 7E0A  
                     l70 7ED2                       l38 7F40                       l47 7DDC  
                     l71 7EF8                       l80 7DF2                       l83 7DB2  
                     l76 7E9C                       l77 7EBC                       l89 7E30  
                     u10 7DDC                       u11 7DD8                       u20 7E08  
                     u21 7E04                       u80 7F40                       u81 7F3C  
                     u90 7ED2                       u91 7ECE      ___wmul@multiplicand 0033  
     EEPROM_read@address 0034                      l900 7E88                      l910 7EB8  
                    l902 7E9E                      l912 7EBA                      l904 7EA4  
                    l920 7F4A                      l762 7DCA                      l770 7DE6  
                    l906 7EAA                      l930 7F84                      l922 7F4E  
                    l764 7DF6                      l772 7DEE                      l780 7DAE  
                    l908 7EB0                      l940 7FAC                      l932 7F88  
                    l916 7F42                      l774 7DF0                      l766 7DDE  
                    l870 7E0C                      l942 7FCC                      l934 7FA4  
                    l918 7F46                      l768 7DE0                      l880 7EBE  
                    l872 7E28                      l944 7FD8                      l928 7F56  
                    l778 7DA8                      l890 7EE4                      l882 7EBE  
                    l794 7DB4                      l946 7FDC                      l892 7EEA  
                    l884 7ED4                      l796 7DBE                      l876 7EFA  
                    l894 7EF0                      l886 7EDA                      l878 7F1A  
                    l896 7EF6                      l888 7EDC                      l898 7E88  
                    _RA5 007C05                      u100 7E9C                      u101 7E98  
                    u110 7FA4                      u111 7FA0                      u120 7FF8  
                    u121 7FF4                      wreg 000FE8                     _data 0021  
                   _main 7F42                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     prodh 000FF4  
                   prodl 000FF3                     start 0000             ___param_bank 000000  
   __end_of_EEPROM_write 7EFA                    ?_main 0031                    _PORTD 000F83  
                  _TRISD 000F95                    _delay 7EFA                    main@i 003F  
                  tablat 000FF5         __end_of_SPI_init 7DC8         __end_of_SPI_read 7E0C  
                  status 000FD8          EEPROM_busy@busy 0033          EEPROM_read@data 0036  
     __size_of_SPI_write 0016     __size_of_EEPROM_busy 000C     __size_of_EEPROM_read 0036  
        __initialization 7E32             __end_of_main 8000                   ??_main 003D  
          __activetblptr 000000      EEPROM_write@address 0034    __end_of_EEPROM_status 7DF4  
                 ?_delay 0037                   _TRISA5 007C95                   _TRISC3 007CA3  
                 _TRISC4 007CA4                   _TRISC5 007CA5                   _SSPBUF 000FC9  
                 ___wmul 7E0C                   isa$std 000001             __pdataCOMRAM 0001  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
      __end_of_SPI_write 7DDE               __accesstop 0080  __end_of__initialization 7E52  
          ___rparam_used 000001           __pcstackCOMRAM 0031    __size_of_EEPROM_write 003C  
          __end_of_delay 7F42                ?_SPI_init 0031                ?_SPI_read 0031  
                ??_delay 0039             _EEPROM_write 7EBE                  ?___wmul 0031  
             ??_SPI_init 0031               ??_SPI_read 0031                  _SSPCON1 000FC6  
                _SSPSTAT 000FC7         EEPROM_write@data 0036                  __Hparam 0000  
                __Lparam 0000          __size_of___wmul 0026                  _address 0001  
                __pcinit 7E32                  __ramtop 0600                  __ptext0 7F42  
                __ptext1 7EFA                  __ptext2 7E0C                  __ptext3 7DB4  
                __ptext4 7EBE                  __ptext5 7E88                  __ptext6 7DA8  
                __ptext7 7DDE                  __ptext8 7DC8                  __ptext9 7DF4  
   end_of_initialization 7E52            ??_EEPROM_busy 0033            ??_EEPROM_read 0036  
                postdec1 000FE5                  postdec2 000FDD                  postinc0 000FEE  
                postinc2 000FDE                _SPI_write 7DC8            SPI_read@dummy 0031  
 __size_of_EEPROM_status 0016      __end_of_EEPROM_busy 7DB4      __end_of_EEPROM_read 7EBE  
         __end_of___wmul 7E32            __pidataCOMRAM 7E58      start_initialization 7E32  
      __size_of_SPI_init 0014        __size_of_SPI_read 0018               ?_SPI_write 0031  
               ??___wmul 0035            _EEPROM_status 7DDE              _EEPROM_busy 7DA8  
            _EEPROM_read 7E88            SPI_write@data 0031             delay@nCycles 0039  
         ?_EEPROM_status 0031           __size_of_delay 0048              ??_SPI_write 0031  
         ___wmul@product 0035        ___wmul@multiplier 0031                 _SPI_init 7DB4  
               _SPI_read 7DF4                copy_data0 7E46                 __Hrparam 0000  
               __Lrparam 0000       delay@nMilliseconds 0037          ??_EEPROM_status 0032  
          ?_EEPROM_write 0034            __size_of_main 00BE                 isa$xinst 000000  
               main@i_67 003D           ??_EEPROM_write 0037             ?_EEPROM_busy 0031  
           ?_EEPROM_read 0034      EEPROM_status@status 0032  
